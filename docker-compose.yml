version: "3.8"

services:
  traefik:
    image: traefik:v2.10
    command:
      - "--api.dashboard=true"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"       # Expose HTTP
      - "8080:8080"   # Traefik Dashboard (optional)
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - app-network

  frontend:
    image: tejirih/frontend
    networks:
      - app-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`frontend.localhost`)"
      - "traefik.http.services.frontend.loadbalancer.server.port=80"

  auth-api:
    image: tejirih/auth-image
    environment:
      - AUTH_API_PORT=8081
      - JWT_SECRET=myfancysecret
      - USERS_API_ADDRESS=http://users-api:8083
    depends_on:
      - users-api
    networks:
      - app-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.auth-api.rule=Host(`auth.localhost`)"
      - "traefik.http.services.auth-api.loadbalancer.server.port=8081"

  todos-api:
    image: tejirih/todos-image
    environment:
      - TODOS_API_PORT=8082
    networks:
      - app-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.todos-api.rule=Host(`todos.localhost`)"
      - "traefik.http.services.todos-api.loadbalancer.server.port=8082"

  users-api:
    image: tejirih/users-image
    environment:
      - USERS_API_PORT=8083
    networks:
      - app-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.users-api.rule=Host(`users.localhost`)"
      - "traefik.http.services.users-api.loadbalancer.server.port=8083"

  log-message-processor:
    image: tejirih/log-image
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_CHANNEL=log_channel
    depends_on:
      - redis
    networks:
      - app-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.log-processor.rule=Host(`log.localhost`)"
      - "traefik.http.services.log-processor.loadbalancer.server.port=8084"

  redis:
    image: "redis:alpine"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

